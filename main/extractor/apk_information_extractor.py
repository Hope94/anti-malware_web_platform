
import hashlib
import os
import ssdeep


class AndroguardAnalysis (object):

    def __init__(self, app_path):
        self.app_path = app_path
        from androguard.core.bytecodes.apk import APK
        self.a = APK (app_path)
        self.d = None
        self.dx = None
        self.cert = None

        if (self.a.is_signed ()):
            signatures = self.a.get_signature_names ()
            for signature in signatures:
                self.cert = self.a.get_certificate (signature)

    def get_detailed_analysis(self, app_path):
        from androguard.misc import AnalyzeAPK
        self.a, self.d, self.dx = AnalyzeAPK (app_path)

    def get_developer_name(self):
        if self.cert is not None:
            return self.cert['tbs_certificate']['issuer'].native.get('organization_name','Unknown')
        else:
            return "Unknown"


def get_hashes(app_path, block_size=2 ** 8):
    md5 = hashlib.md5 ()
    sha1 = hashlib.sha1 ()
    sha256 = hashlib.sha256 ()
    f = open (app_path, 'rb')
    while True:
        data = f.read (block_size)
        if not data:
            break

        md5.update (data)
        sha1.update (data)
        sha256.update (data)
    return [md5.hexdigest (), sha1.hexdigest (), sha256.hexdigest ()]

def get_sha256(app_path, block_size=2 ** 8):
    sha256 = hashlib.sha256 ()
    f = open (app_path, 'rb')
    while True:
        data = f.read (block_size)
        if not data:
            break
        sha256.update (data)
    return sha256.hexdigest ()

def get_fuzzy_hash(path_to_apk):
    return ssdeep.hash_from_file (path_to_apk)


def extract_info_apk(path_to_apk):
    androguard = AndroguardAnalysis (app_path=path_to_apk)
    hashes = get_hashes (path_to_apk)
    ssdeep = get_fuzzy_hash (path_to_apk)
    if androguard.a.get_androidversion_name ():
        d = androguard.a.get_androidversion_name ()
    else:
        d = 'sdk_v_' + str (androguard.a.get_effective_target_sdk_version ())
    info_dict = {
        'name': androguard.a.get_app_name (),
        'package': androguard.a.get_package (),
        'developer': androguard.get_developer_name (),
        'displayed_version': d,
        'size': os.path.getsize (path_to_apk),
        'md5': hashes[0],
        'sha1': hashes[1],
        'sha256': hashes[2],
        'ssdeep': ssdeep,
        'targetsdk': androguard.a.get_effective_target_sdk_version ()
    }
    return info_dict, androguard.a

# from androguard.core.analysis import analysis
# from pfe_plateforme_web.settings import APK_DIR
# path_to_apk = os.path.join(APK_DIR,'skygofree.apk')
# androguard = AndroguardAnalysis (app_path=path_to_apk)
