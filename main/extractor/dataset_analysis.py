import os
import traceback
from main.extractor.utils import list_files, clean_baksmali_output_dir, APKS_JS_OUTPUT_PATH
from pfe_plateforme_web.settings import MEDIA_DIR, APK_DIR
from main.extractor.apis_manager import init_in_memory_dicts
from main.extractor.apk_analysis import ApkAnalysis
import time

MALWARE_DATASET_DIR_PATH = os.path.join (MEDIA_DIR, 'Malwares')
BENIGN_DATASET_DIR_PATH = os.path.join (MEDIA_DIR, 'Benigns')



def analyse_datasets(path: str, dataset_name: str, malignity: int, manifest_tool=2, in_memory=False,
                 ) -> int:
    list_path_apks = [apk_path for apk_path in list_files (path)]
    count = 0
    apks_number = len (list_path_apks)
    analyse_log = open ('analyse_log.txt', 'w')
    analyse_log.write ('####-> path :' + path + ' ####-> malignity' + str (malignity) + '\n')
    if in_memory:
        init_in_memory_dicts ()
    for _apk in list_path_apks:
        try:
            app = ApkAnalysis(app_path=_apk)
            app.extract_apk(dataset=dataset_name, in_memory=True, manifest_tool=manifest_tool, malignity=malignity)
            count += 1
            print (_apk + ' analyzed .... ' + str (count) + '/' + str (apks_number))
        except Exception as exception:
            print ('Error for APK ' + _apk)
            analyse_log.write ('Error for APK ' + _apk + '\n')
            analyse_log.write ('Exception \n' + str (exception) + '\n')
            traceback.print_exc ()
    analyse_log.write ('####-> analyzed :' + str (count) + ' ####-> total: ' + str (apks_number) + '\n')
    analyse_log.close ()
    return count




start_time = time.time ()
app_name = "google.apk"
path_to_apk = os.path.join (APK_DIR, app_name)
# init_in_memory_dicts()
# extract_apk(path=path_to_apk, dataset='user', in_memory=True, manifest_tool=2, malignity=-1)
#extract_apk_features(path_to_apk,dataset='user',in_memory=True,use_aapt=True,malignity=-1)
analyse_apks (APK_DIR, dataset_name='user', malignity=-1, manifest_tool=2, in_memory=True)
print ("--- %s seconds ---" % (time.time () - start_time))
